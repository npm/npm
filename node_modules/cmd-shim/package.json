{
  "name": "cmd-shim",
  "version": "1.0.0",
  "description": "Used in npm for command line application support",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/cmd-shim.git"
  },
  "license": "MIT",
  "dependencies": {
    "graceful-fs": "~1.2.0",
    "rimraf": "2",
    "mkdirp": "~0.3.3",
    "slide": "1",
    "npmlog": "0"
  },
  "readme": "# cmd-shim\r\n\r\nThe cmd-shim used in npm.  Currently npm has this code inlined.  It wasn not originally written by me; I simply copied it from the npm repository.\r\n\r\n## Installation\r\n\r\n```\r\nnpm install cmd-shim\r\n```\r\n\r\n## API\r\n\r\n### cmdShim(from, to, cb)\r\n\r\nCreate a cmd shim at `to` for the command line program at `from`.  e.g.\r\n\r\n```javascript\r\nvar cmdShim = require('cmd-shim');\r\ncmdShim(__dirname + '/cli.js', '/usr/bin/command-name', function (err) {\r\n  if (err) throw err;\r\n});\r\n```\r\n\r\n### cmdShim.ifExists(from, to, cb)\r\n\r\nThe same as above, but will just continue if the file does not exist.  Source:\r\n\r\n```javascript\r\nfunction cmdShimIfExists (from, to, cb) {\r\n  fs.stat(from, function (er) {\r\n    if (er) return cb()\r\n    cmdShim(from, to, cb)\r\n  })\r\n}\r\n```\r\n\r\n## Logging\r\n\r\nBy default, [npmlog](https://npmjs.org/package/npmlog) is used for logging.  Log messages are written by default if it fails to write to the output directory.  You can disable the logging by calling:\r\n\r\n```javascript\r\nrequire('npmlog').level('silent');\r\n```\r\n\r\n## License\r\n\r\nMIT",
  "readmeFilename": "README.md",
  "_id": "cmd-shim@1.0.0",
  "_from": "cmd-shim@~1.0.0"
}
