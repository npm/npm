{
  "name": "jsup",
  "version": "0.0.1",
  "description": "modify json files in-place, preserving formatting",
  "main": "index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "burrito": "~0.2.12",
    "traverse": "~0.6.1"
  },
  "devDependencies": {
    "tap": "~0.2.5"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/jsup.git"
  },
  "keywords": [
    "json",
    "update",
    "in-place",
    "preserve",
    "whitespace",
    "format"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": {
    "node": ">=0.4"
  },
  "readme": "jsup\n====\n\nUpdate json strings in-place.\n\n[![build status](https://secure.travis-ci.org/substack/jsup.png)](http://travis-ci.org/substack/jsup)\n\nexample\n=======\n\nstub\n----\n\nstub.json:\n\n````javascript\n{\n    \"a\" : [   1,  2,  333333,  4   ] ,\n    \"b\" : [ 3, 4, { \"c\" : [ 5, 6 ] } ],\n    \"c\" :\n      444444,\n    \"d\" : null\n}\n````\n\nstub.js:\n\n````javascript\nvar jsup = require('jsup');\nvar fs = require('fs');\nvar src = fs.readFileSync(__dirname + '/stub.json', 'utf8');\n\nvar s = jsup(src)\n    .set([ 'a', 2 ], 3)\n    .set([ 'c' ], 'lul')\n    .stringify()\n;\nconsole.log(s);\n````\n\noutput:\n\n    $ node stub.js\n    {\n        \"a\" : [   1,  2,  3,  4   ] ,\n        \"b\" : [ 3, 4, { \"c\" : [ 5, 6 ] } ],\n        \"c\" :\n          \"lul\",\n        \"d\" : null\n    }\n\nmethods\n=======\n\nvar jsup = require('jsup');\n\nvar j = jsup(src)\n-----------------\n\nReturn a new jsup updater from the json string body `src`.\n\nj.get(path=[])\n--------------\n\nGet the element at `path`.\n\nj.set(path, value)\n------------------\n\nReplace the element at `path` with `value`, preserving indentation.\n\nRight now `value` will be run through `JSON.stringify()` for the replacement.\n\nThere must be an element at `path` already or this method will throw.\n\nj.stringify()\n-------------\n\nReturn the new string source with modifications, preserving indentation.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) just do:\n\n    npm install jsup\n",
  "_id": "jsup@0.0.1",
  "_from": "jsup"
}
