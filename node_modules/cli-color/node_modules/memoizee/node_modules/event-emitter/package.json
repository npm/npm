{
  "name": "event-emitter",
  "version": "0.2.2",
  "description": "Cross-environment event emitter",
  "keywords": [
    "event",
    "events",
    "trigger",
    "observer",
    "listener",
    "emitter"
  ],
  "author": {
    "name": "Mariusz Nowak",
    "email": "medikoo+event-emitter@medikoo.com",
    "url": "http://www.medikoo.com/"
  },
  "main": "lib",
  "repository": {
    "type": "git",
    "url": "git://github.com/medikoo/event-emitter.git"
  },
  "bugs": {
    "url": "https://github.com/medikoo/event-emitter/issues",
    "email": "medikoo+event-emitter@medikoo.com"
  },
  "dependencies": {
    "es5-ext": "~0.9.2"
  },
  "scripts": {
    "test": "node ./node_modules/tad/bin/tad lib"
  },
  "devDependencies": {
    "tad": "~0.1.16"
  },
  "licence": "MIT",
  "engines": {
    "node": ">=0.4"
  },
  "readme": "# EventEmitter – Cross-environment event emitter solution for JavaScript\n\n## Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar emitter = ee({}), listener;\n\nemitter.on('test', listener = function (args) {\n  // …emitter logic\n});\n\nemitter.once('test', function (args) {\n  // …invoked only once(!)\n});\n\nemitter.emit('test', arg1, arg2/*…args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*…args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*…args*/); // No listeners invoked\n```\n\n## Installation\n### NPM\n\nIn your project path:\n\n\t$ npm install event-emitter\n\n### Browser\n\nBrowser bundle can be easily created with help of [modules-webmake](https://github.com/medikoo/modules-webmake). Assuming that you have latest [Node.js](http://nodejs.org/) and [Git](http://git-scm.com/) installed, following will work in command shell of any system (Linux/MacOS/Windows):\n\n```\n$ npm install -g webmake\n$ git clone git://github.com/medikoo/event-emitter.git\n$ cd event-emitter\n$ npm install\n$ cd ..\n$ webmake --name=eventEmitter event-emitter/lib/index.js event-emitter.js\n```\n\nIf you work with AMD modules, add _amd_ option, so generated bundle is one:\n\n```\n$ webmake --name=eventEmitter --amd event-emitter/lib/index.js event-emitter.js\n```\n\n_Mind that eventEmitter relies on some EcmaScript5 features, so for older browsers you need to load as well [es5-shim](https://github.com/kriskowal/es5-shim)_\n\n## Functionalities provided as separate modules\n\n### allOff(obj)\n\nRemove all listeners\n\n```javascript\nvar eeAllOff = require('event-emitter/lib/all-off');\neeAllOff(emitter); // Removed all registered listeners on emitter\n```\n\n### unify(emitter1, emitter2)\n\nUnify listeners database of two emitter.\nEvents emitted on either emitter will call listeners attached to emitter object\n\n```javascript\nvar eeUnify = require('event-emitter/lib/unify');\n\nvar emitter1 = ee(), listener1, listener3;\nvar emitter2 = ee(), listener2, listener4;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar unify = eeUnify(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked listener1 and listener2\n\nemitter1.on('test', listener3 = function () { });\nemitter2.on('test', listener4 = function () { });\n\nemitter1.emit('test'); // Invoked listener1, listener2, listener3 and listener4\nemitter2.emit('test'); // Invoked listener1, listener2, listener3 and listener4\n```\n\n### hasListeners(obj[, type])\n\nWhether given object have registered listeners\n\n```javascript\nvar emitter = ee();\nvar hasListeners = require('event-emitter/lib/has-listeners');\nvar listener = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n```\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/medikoo/event-emitter",
  "_id": "event-emitter@0.2.2",
  "_from": "event-emitter@~0.2.2"
}
