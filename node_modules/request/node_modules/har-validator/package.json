{
  "version": "2.0.6",
  "name": "har-validator",
  "description": "Extremely fast HTTP Archive (HAR) validator using JSON Schema",
  "author": {
    "name": "Ahmad Nassri",
    "email": "ahmad@ahmadnassri.com",
    "url": "https://www.ahmadnassri.com/"
  },
  "homepage": "https://github.com/ahmadnassri/har-validator",
  "repository": {
    "type": "git",
    "url": "git://github.com/ahmadnassri/har-validator"
  },
  "license": "ISC",
  "main": "lib/index",
  "bin": {
    "har-validator": "bin/har-validator"
  },
  "keywords": [
    "har",
    "http",
    "archive",
    "validate",
    "validator"
  ],
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "bin",
    "lib"
  ],
  "bugs": {
    "url": "https://github.com/ahmadnassri/har-validator/issues"
  },
  "scripts": {
    "pretest": "standard && echint",
    "test": "mocha",
    "posttest": "npm run coverage",
    "coverage": "istanbul cover --dir coverage _mocha -- -R dot",
    "codeclimate": "codeclimate < coverage/lcov.info"
  },
  "echint": {
    "ignore": [
      "coverage/**"
    ]
  },
  "devDependencies": {
    "codeclimate-test-reporter": "0.2.1",
    "echint": "^1.5.1",
    "istanbul": "^0.4.2",
    "mocha": "^2.3.4",
    "require-directory": "^2.1.1",
    "should": "^8.1.1",
    "standard": "^5.4.1"
  },
  "dependencies": {
    "chalk": "^1.1.1",
    "commander": "^2.9.0",
    "is-my-json-valid": "^2.12.4",
    "pinkie-promise": "^2.0.0"
  },
  "readme": "# HAR Validator [![version][npm-version]][npm-url] [![License][npm-license]][license-url]\n\nExtremely fast HTTP Archive ([HAR](http://www.softwareishard.com/blog/har-12-spec/)) validator using JSON Schema.\n\n[![Build Status][travis-image]][travis-url]\n[![Downloads][npm-downloads]][npm-url]\n[![Code Climate][codeclimate-quality]][codeclimate-url]\n[![Coverage Status][codeclimate-coverage]][codeclimate-url]\n[![Dependencies][david-image]][david-url]\n\n## Install\n\n```shell\n# to use in cli\nnpm install --global har-validator\n\n# to use as a module\nnpm install --save har-validator\n```\n\n## Usage\n\n```\n\n  Usage: har-validator [options] <files ...>\n\n  Options:\n\n    -h, --help           output usage information\n    -V, --version        output the version number\n    -s, --schema [name]  validate schema name (log, request, response, etc ...)\n\n```\n\n###### Example\n\n```shell\nhar-validator har.json\n\nhar-validator --schema request request.json\n```\n\n## API\n\n**Note**: as of [`v2.0.0`](https://github.com/ahmadnassri/har-validator/releases/tag/v2.0.0) this module defaults to Promise based API. *For backward comptability with `v1.x` an [async/callback API](#callback-api) is provided*\n\n### Validate(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a full [HAR](http://www.softwareishard.com/blog/har-12-spec/) object\n\n```js\nvalidate(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.log(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [log](http://www.softwareishard.com/blog/har-12-spec/#log) object\n\n```js\nvalidate.log(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.cache(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [cache](http://www.softwareishard.com/blog/har-12-spec/#cache) object\n\n```js\nvalidate.cache(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.cacheEntry(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [\"beforeRequest\" or \"afterRequest\"](http://www.softwareishard.com/blog/har-12-spec/#cache) objects\n\n```js\nvalidate.cacheEntry(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.content(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [content](http://www.softwareishard.com/blog/har-12-spec/#content) object\n\n```js\nvalidate.content(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.cookie(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [cookie](http://www.softwareishard.com/blog/har-12-spec/#cookies) object\n\n```js\nvalidate.cookie(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.creator(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [creator](http://www.softwareishard.com/blog/har-12-spec/#creator) object\n\n```js\nvalidate.creator(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.entry(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  an [entry](http://www.softwareishard.com/blog/har-12-spec/#entries) object\n\n```js\nvalidate.entry(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.log(data)\n\nalias of [`Validate(data)`](#validate-data-callback-)\n\n### Validate.page(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [page](http://www.softwareishard.com/blog/har-12-spec/#pages) object\n\n```js\nvalidate.page(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.pageTimings(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [pageTimings](http://www.softwareishard.com/blog/har-12-spec/#pageTimings) object\n\n```js\nvalidate.pageTimings(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.postData(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [postData](http://www.softwareishard.com/blog/har-12-spec/#postData) object\n\n```js\nvalidate.postData(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.record(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [record](http://www.softwareishard.com/blog/har-12-spec/#headers) object\n\n```js\nvalidate.record(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.request(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [request](http://www.softwareishard.com/blog/har-12-spec/#request) object\n\n```js\nvalidate.request(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.response(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [response](http://www.softwareishard.com/blog/har-12-spec/#response) object\n\n```js\nvalidate.cacheEntry(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n### Validate.timings(data)\n\n> Returns a promise that resolves to the valid object.\n\n- **data**: `Object` *(Required)*\n  a [timings](http://www.softwareishard.com/blog/har-12-spec/#timings) object\n\n```js\nvalidate.timings(data)\n  .then(data => console.log('horray!'))\n  .catch(console.error)\n```\n\n----\n\n## Callback API\n\n### Validate(data [, callback])\n\n> Returns `true` or `false`.\n\n```js\nvar HAR = require('./har.json');\nvar validate = require('har-validator/lib/async');\n\nvalidate(HAR, function (e, valid) {\n  if (e) console.log(e.errors)\n\n  if (valid) console.log('horray!');\n});\n\n```\nThe async API provides exactly the same methods as the [Promise API](#promise-api)\n\n----\n\n## Support\n\nDonations are welcome to help support the continuous development of this project.\n\n[![Gratipay][gratipay-image]][gratipay-url]\n[![PayPal][paypal-image]][paypal-url]\n[![Flattr][flattr-image]][flattr-url]\n[![Bitcoin][bitcoin-image]][bitcoin-url]\n\n## License\n\n[ISC License](LICENSE) &copy; [Ahmad Nassri](https://www.ahmadnassri.com/)\n\n[license-url]: https://github.com/ahmadnassri/har-validator/blob/master/LICENSE\n\n[travis-url]: https://travis-ci.org/ahmadnassri/har-validator\n[travis-image]: https://img.shields.io/travis/ahmadnassri/har-validator.svg?style=flat-square\n\n[npm-url]: https://www.npmjs.com/package/har-validator\n[npm-license]: https://img.shields.io/npm/l/har-validator.svg?style=flat-square\n[npm-version]: https://img.shields.io/npm/v/har-validator.svg?style=flat-square\n[npm-downloads]: https://img.shields.io/npm/dm/har-validator.svg?style=flat-square\n\n[codeclimate-url]: https://codeclimate.com/github/ahmadnassri/har-validator\n[codeclimate-quality]: https://img.shields.io/codeclimate/github/ahmadnassri/har-validator.svg?style=flat-square\n[codeclimate-coverage]: https://img.shields.io/codeclimate/coverage/github/ahmadnassri/har-validator.svg?style=flat-square\n\n[david-url]: https://david-dm.org/ahmadnassri/har-validator\n[david-image]: https://img.shields.io/david/ahmadnassri/har-validator.svg?style=flat-square\n\n[gratipay-url]: https://www.gratipay.com/ahmadnassri/\n[gratipay-image]: https://img.shields.io/gratipay/ahmadnassri.svg?style=flat-square\n\n[paypal-url]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UJ2B2BTK9VLRS&on0=project&os0=har-validator\n[paypal-image]: http://img.shields.io/badge/paypal-donate-green.svg?style=flat-square\n\n[flattr-url]: https://flattr.com/submit/auto?user_id=ahmadnassri&url=https://github.com/ahmadnassri/har-validator&title=har-validator&language=&tags=github&category=software\n[flattr-image]: http://img.shields.io/badge/flattr-donate-green.svg?style=flat-square\n\n[bitcoin-image]: http://img.shields.io/badge/bitcoin-1Nb46sZRVG3or7pNaDjthcGJpWhvoPpCxy-green.svg?style=flat-square\n[bitcoin-url]: https://www.coinbase.com/checkouts/ae383ae6bb931a2fa5ad11cec115191e?name=har-validator\n",
  "readmeFilename": "README.md",
  "_id": "har-validator@2.0.6",
  "_from": "har-validator@~2.0.6"
}
