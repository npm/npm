
module.exports = bundle

var npm = require("../npm")
  , fs = require("fs")
  , path = require("path")
  , log = require("./utils/log")
  , readJson = require("./utils/read-json")
  , mkdir = require("./utils/mkdir-p")
  , fs = require("./utils/graceful-fs")

bundle.usage = "npm bundle <location> [<pkg>]"

function bundle (args, cb) {
  log(args, "bundle")
  var location = args.shift()
    , pkg = args.shift() || "."
  if (!location) return cb(new Error(bundle.usage))
  if (location.charAt(0) !== "/") {
    location = path.join(process.cwd(), location)
  }
  mkdir(location, function (er) {
    if (er) return cb(new Error(bundle.usage))
    npm.config.set("root", location)
    npm.config.set("binroot", null)
    npm.config.set("manroot", null)
    readJson(path.join(pkg, "package.json"), function (er, data) {
      if (er) return log.er(cb, "Error adding "+pkg+" to bundle cache")(er)
      var depNames = Object.keys(data.dependencies)
        , deps = depNames.map(function (d) {
            var v = data.dependencies[d]
            if (v === "*") v = ""
            return d+"@"+v
          })
      log.verbose(deps, "bundle deps")
      npm.commands.install(deps, function (er) {
        if (er) return cleanup(er, cb)
        writeBundleShim(location, depNames, function (er) {
          return cb(er)
        })
      })
    })
  })
}

function writeBundleShim (location, depNames, cb) {
  var data = "// generated by npm, please don't touch!\n"
           + "var i = require.paths.indexOf(__dirname)\n"
           + "if (i && i + 1) require.paths.splice(i, 1)\n"
           + "if (i) require.paths.shift(__dirname)\n"
           + depNames.map(JSON.stringify).map(function (d) {
               return "exports["+d+"] = require('./'+"+d+")"
             }).join("\n")
  fs.writeFile(path.join(location, "index.js"), data, cb)
}

